services:
  mongodb_db:
    hostname: mongodb_db
    image: mongo:6.0
    container_name: mongodb_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: always
    networks:
      - app-network # 连接到自定义网络

  mysql_db:
    image: mysql:8.0
    hostname: mysql_db
    container_name: mysql_db
    environment:
      MYSQL_DATABASE: reportsDB
      MYSQL_USER: sqlite
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    networks:
      - app-network # 连接到自定义网络

  storage:
    build: 
      context: ./storage
    ports:
      - "8090:8090" # 建议外部端口改为 8098，避免和 Processing 服务可能发生的端口冲突
    command: sh -c "python create_tables.py && uvicorn app:app --host 0.0.0.0 --port 8090 --workers 1"
    depends_on:
      - mysql_db
    restart: always 
    networks:
      - app-network # 连接到自定义网络

  api_gateway:
    build: 
      context: ./api_gateway
    ports:
      - "8099:8099"
    depends_on:
      - storage
    restart: always 
    networks:
      - app-network # 连接到自定义网络

  auth_service:
    build: 
      context: ./auth_service
    ports:
      - "8070:8070"
    depends_on:
      - storage
    restart: always 
    networks:
      - app-network # 连接到自定义网络

  data_entry_web:
    build: 
      context: ./data_entry_web
    ports:
      - "8071:8071"
    depends_on:
      - storage
    restart: always
    networks:
      - app-network # 连接到自定义网络

  processing:
    build: 
      context: ./processing
    ports:
      - "8100:8100"
    depends_on:
      - mongodb_db
      - storage
    restart: always
    networks:
      - app-network # 连接到自定义网络

volumes:
  mongo_data:
  mysql_data:

# 在文件底部显式定义网络
networks:
  app-network:
    driver: bridge
